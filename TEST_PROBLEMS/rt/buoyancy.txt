What is the right way to setup the Rayleigh-Taylor problem in MAESTRO?

program parameters:

 rho_2 = density of heavy fluid
 rho_1 = density of light fluid

 rho_2 > rho_1

 gravity is constant.


1. compressible code:

   initialize the domain with rho_2 in the top half and rho_1 in the
   bottom half

   set the pressure to be rho*g*y + p0, since g = const

   find the remaining thermodynamic quantities via the EOS.

   This then has constant density in the 2 regions with a hydrostatic
   pressure gradient (and therefore a temperature gradient) in the two
   regions.

   The boundary conditions at the top and bottom of the domain are
   hydrostatic, which provides pressure support but (hopefully) allows
   soundwaves to propagate out of the domain.

   The momentum equation is:

      rho DU/Dt + grad{p} = rho g

   so the buoyancy term here involves the full density.



2. small scale code (SNe):

    here, the pressure, p_0, is constant in the domain.

    The top and bottom states are uniform density.

    This means that there is no hydrostatic stratification.

    The boundary conditions we used for RT flames were inflow at the
    bottom and outflow at the top.  Presumably the inflow boundary
    provided the support against gravity to keep the problem in the
    domain.
  
    The momentum equation is:

       rho DU/Dt + grad{pi} = rho g

   so the buoyancy term here involves the full density (just as in the
   compressible case).

   An interesting question is what is the role of pi here?  Does it pick
   up the stratification?

     

3. MAESTRO:

   If we wanted to use the normal MAESTRO constraint, then we would 
   want a stratified p_0 (as in the compressible case) and a rho_0
   to match.

   This rho_0 would carry the initial discontinity (top half of the
   domain would have rho_0 = rho_2 and the bottom half of the domain
   would have rho_0 = rho_1).

   The momentum equation is written as:

      DU/Dt + (1/rho) grad{pi} = [(rho - rho_0)/ rho] g

   so the buoyancy term here involves the rho - rho_0

   Since rho_0 already contains the density discontinuity, if we
   perturb the interface, in the top half of the domain, there will be
   some regions where rho < rho_0, and those will rise upwards, and in
   regions below the initial interface, there will be some regions
   where rho > rho_0, and those will fall.

   But over long timescales is the behavior correct?  

   Does it make sense to evolve the base state?  Since there is no 
   heating, this evolution will be entirely via etarho.

   The boundary conditions here would presumably be solid walls at 
   the top and the bottom

   
   Alternately, we could set rho_0 = 0, and carry the full state in rho,
   then we reduce to the small scale code behavoir.






  
  
