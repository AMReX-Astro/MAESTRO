-- rebase the EOS to Frank's latest and turn on the Coulomb
   corrections.  

-- deal with the comment "! NOTE NOTE : THIS IS WRONG FOR SPHERICAL !!"
   in make_edge_state.f90.  Note that this same U.e_r dw_0/dr e_r term
   is missing from mkforce.f90 as well for spherical.

-- make a runtime diagnostic that prints <q> and q_rms for temperature,
   energy generation, and velocity as a function of radius.

-- figure out what density_cutoff should be in initdata.f90 (in relation
   to anelastic_cutoff), and understand what values of this give a valid
   basestate expansion.

-- make_w0 for spherical force not return the velocity force f,
   (1/rho0) grad pi_0.  Also, change the sign convention -- the
   force should be the positive force, but what we are computing
   for plane-parallel in make_w0 is actually -F, but we are calling
   it F, so that's confusing.

-- add the eta stuff in for spherical (also in the predictor)

-- some places (like in rhoh_vs_t.f90), we loop over 1, nr(nlevs)-1
   when dealing with the base state, but in others, we loop over
   1, nr(n)-1 -- which should we be doing?

-- in modify_scal_force, for spherical, why do we compute divu for  
   the base state in the radial geom and then put it on the Cart 
   grid, instead of putting w0 onto the Cart grid first and then
   computing div{U + w_0} together?  This is more along the lines
   of how we treat the div{w_0} stuff in update_vel.f90

-- generalize make_w0_cart to work with any edge-centered base state
   quantity, not just w0.  This, for example, would allow us to put	
   s0_predicted_edge on a Cartesian edge-centered grid.

-- make predict_X_at_edges work for spherical
