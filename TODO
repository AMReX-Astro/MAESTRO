-- test_basestate currently should not work since gamma1bar is not
   initialized in init_base_state anymore.  We need a temporary hack
   to compute gamma1bar from the base state for this example only

-- rebase the EOS to Frank's latest and turn on the Coulomb
   corrections.  

-- deal with the comment "! NOTE NOTE : THIS IS WRONG FOR SPHERICAL !!"
   in make_edge_state.f90.  Note that this same U.e_r dw_0/dr e_r term
   is missing from mkforce.f90 as well for spherical.

-- make a runtime diagnostic that prints <q> and q_rms for temperature,
   energy generation, and velocity as a function of radius.

-- figure out what density_cutoff should be in initdata.f90 (in relation
   to anelastic_cutoff), and understand what values of this give a valid
   basestate expansion.

-- add the eta stuff in for spherical (also in the predictor)

-- some places (like in rhoh_vs_t.f90), we loop over 1, nr(nlevs)-1
   when dealing with the base state, but in others, we loop over
   1, nr(n)-1 -- which should we be doing?

-- in modify_scal_force, for spherical, why do we compute divu for  
   the base state in the radial geom and then put it on the Cart 
   grid, instead of putting w0 onto the Cart grid first and then
   computing div{U + w_0} together?  This is more along the lines
   of how we treat the div{w_0} stuff in update_vel.f90

-- generalize make_w0_cart to work with any edge-centered base state
   quantity, not just w0.  This, for example, would allow us to put	
   rho0_predicted_edge on a Cartesian edge-centered grid.

